#!/usr/bin/python3

import subprocess
import random
import sys

MAX_USER = 100
MAX_ENVP = 0x100
MAX_OVERFLOW = 500

DENY_LIST = ['Aborted', 'kill']
LC_ENV = ['LC_ADDRESS', 'LC_IDENTIFICATION', 'LC_MEASUREMENT', 'LC_MONETARY'
	'LC_NAME', 'LC_NUMERIC', 'LC_PAPER', 'LC_TELEPHONE', 'LC_TIME', 'LC_MESSAGES']
	
def gen_arg_env():
    arg = []
    arg.append('-s')
    arg.append(random.randint(1, MAX_USER)*'A' + '\\\\')
    arg.append(random.randint(5, MAX_OVERFLOW)*'C')
    env={}
    env_count = random.randint(0, len(LC_ENV))
    for _ in range(env_count):
        env_idx = random.randint(0, len(LC_ENV)-1)
        env_key = LC_ENV[env_idx]
        env_val = 'C.UTF-8@' + random.randint(1, MAX_ENVP)*'B'
        env.update({env_key: env_val})
    return arg, env
	
def run(arg, env, rounds):
    cmd = ['/usr/bin/gdb']
    cmd += ['-ex', 'directory /home/servadmin/sudofuzz/src/'] #directory for source files
    cmd += ['-ex', 'unset environment']
    for e in env:
        cmd += ['-ex', f'set environment {e}={env[e]}']
    cmd += ['-ex', 'r ' + ' '.join([f'"{a}"' for a in arg])]
    cmd += ['-ex', 'c']
    cmd += ['-ex', 'echo BT START-----\n']
    cmd += ['-ex', 'bt']
    cmd += ['-ex', 'echo BT END-----\n']
    cmd += ['/home/servadmin/sudocve/build/bin/sudoedit'] #directory for sudoedit binary
    p = subprocess.Popen(cmd, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, bufsize=0)
    out, _ = p.communicate(timeout=2)
    #print(out.decode())
    for word in DENY_LIST:
        if word in out.decode():
            return
    #print(out.decode())
    failure = out.decode().split('Program received')[1].split('\n')[1].split('at')[0]
    print(failure)
    f = open('output/' + str(rounds), 'w+')
    f.write("GREPFORME " + failure + '\n')
    f.write(out.decode())
    for i in cmd:
        f.write(i + '\n')
    f.close()

rounds = 1
while True:
    try:
        a, b = gen_arg_env()
        run(a, b, rounds)
        sys.stdout.write(str(rounds) + '\r')
        rounds += 1
    except KeyboardInterrupt:
        sys.exit(1)
    except Exception as e:
        #print(e)
        sys.stdout.write(str(rounds) + '\r')
        rounds += 1
